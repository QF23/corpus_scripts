#This file takes the html file of the corpus as generated by Frantext ('Visualiser') and turns into a dataframe on which manipulations can be performed.
#Warning : before running this script, you have to mannually look for item K729 and turn LOUAS into LOUYS, as it is a weird character which counts as a new line for some mysterious reason I couldn't quite figure out.
#Created 2016-03-09 by QF

import pandas as pd
import numpy as np
import codecs

file = '/home/quentin/Dropbox/corpus_html.txt'

file_cp = codecs.open(file,encoding='ISO-8859-1')
file_lines = file_cp.readlines()
cote = []
date = []
decade = []
occ = []

i=0
imax = len(file_lines)

#The first loop throws away all lines not containing bibliographic contents about the different texts in the corpus. 

while i<imax:
    if 'COTE' in file_lines[i]:
        i+=1
    else :
        file_lines.remove(file_lines[i])
        imax-=1

print('Nombre de textes dans le corpus = %s' %len(file_lines))

#The second loop extracts the cote, the date and the number of occurrences for each text of the corpus.

for line in range(len(file_lines)):
    c = ''
    i_count = 0
    string = file_lines[line].split('COTE=')[1]
    while string[i_count] != ';':
        c = c + string[i_count]
        i_count += 1
    cote.append(c)

#The third and fourth loops extracts the dates and from this, defines the corresponding decade.

for line in range(len(file_lines)):
    if line==0:
        date.append(file_lines[line].split('right\'>')[2][:11])
    else:
        date.append(file_lines[line].split('right\'>')[1][:11])

for j in range(len(date)):
    if '.' in date[j]:
        date[j] = date[j][2:6]
    if '-' in date[j]:
        date[j] = date[j].split('-')
        to_keep = []
        for k in range (len(date[j][1])):
            if date[j][1][k].isdigit():
                to_keep.append(date[j][1][k])
        date[j][1] = ''.join(to_keep)
        if len(date[j][1]) != 4:
            date[j]=date[j][0][:2]+date[j][1]
        else:
            date[j]=date[j][1]
    else:
        date[j] = date[j][:4]
        if not date[j][-1].isdigit():
            date[j] = '0' + date[j][:3]
    d = date[j]
    d = np.ceil(int(d)/10)
    decade.append('%i-%i' %((d-1)*10+1, (d)*10))

#The last loop gives the number of words in the text.

for line in range(len(file_lines)):
    occ_line = file_lines[line].split('valign=\'top')[3]
    to_keep = []
    for ich in range(len(occ_line)):
            if occ_line[ich].isdigit():
                to_keep.append(occ_line[ich])
    occ_line = ''.join(to_keep)
    occ.append(int(occ_line))

corpus_dict = {'Cote':cote,"Date":date,"DÃ©cades":decade,"Nombre de mots":occ}
corpus_panda = pd.DataFrame(corpus_dict)
corpus_panda.to_csv('corpus.csv')

